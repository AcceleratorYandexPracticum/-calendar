name: Calendar backend build workflows

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
    types:
      - closed

jobs:
  tests:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.10.0

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ./backend/requirements.txt
          pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort flake8-quotes

      - name: Test with flake8
        run: python -m flake8 backend

      - name: Test with Django Unittest
        run: |
          cd backend
          python manage.py makemigrations
          python manage.py test --verbosity 2

  build_and_push_to_dockerhub:
    if: github.event.pull_request.merged == true
    name: Push to Dockerhub
    runs-on: ubuntu-20.04
    needs: tests
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push backend to Dockerhub
        uses: docker/build-push-action@v3
        with:
          context: ./backend/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/backend:latest
      - name: Push frontend to Dockerhub
        uses: docker/build-push-action@v3
        with:
          context: ./frontend/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/frontend:latest

  deploy_on_remote_server:
    if: github.event.pull_request.merged == true
    name: Deploy project on remote server
    runs-on: ubuntu-20.04
    needs: build_and_push_to_dockerhub
    steps:
      - name: executing remote ssh commands and deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USERNAME }}
          passphrase: ${{ secrets.REMOTE_PASSPHRASE }}
          key: ${{ secrets.REMOTE_SSH_KEY }}
          script: |
            cd ../calendar/infra
            rm .env
            touch .env
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            echo DB_USER=${{ secrets.DB_USER }} >> .env
            echo DB_PASSWORD=${{ secrets.DB_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env 
            
            echo DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }} >> .env
            echo ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }} >> .env
            
            echo EMAIL_HOST_USER=${{ secrets.EMAIL_HOST_USER }} >> .env
            echo EMAIL_HOST_PASSWORD=${{ secrets.EMAIL_HOST_PASSWORD }} >> .env
            docker-compose pull
            docker-compose up -d

